;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 30/03/2020 12:46:20 a. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2973      	GOTO       371
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1898      	BTFSC      TXSTA, 1
0x0006	0x2809      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0007	0x0000      	NOP
0x0008	0x2803      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x0862      	MOVF       FARG_UART1_Write_data_, 0
0x000B	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x000C	0x0008      	RETURN
; end of _UART1_Write
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x000D	0x3000      	MOVLW      0
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x1303      	BCF        STATUS, 6
0x0010	0x1A8C      	BTFSC      PIR1, 5
0x0011	0x3001      	MOVLW      1
0x0012	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0013	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x081A      	MOVF       RCREG, 0
0x0017	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0018	0x1C98      	BTFSS      RCSTA, 1
0x0019	0x281C      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x001A	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x001B	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x001C	0x0871      	MOVF       R1, 0
0x001D	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x001E	0x0008      	RETURN
; end of _UART1_Read
_mult:
;uart_manager.c,13 :: 		unsigned char mult(unsigned char dato){
;uart_manager.c,14 :: 		if (dato>='A'){
0x001F	0x3041      	MOVLW      65
0x0020	0x1283      	BCF        STATUS, 5
0x0021	0x1303      	BCF        STATUS, 6
0x0022	0x025F      	SUBWF      FARG_mult_dato, 0
0x0023	0x1C03      	BTFSS      STATUS, 0
0x0024	0x2829      	GOTO       L_mult14
;uart_manager.c,15 :: 		return dato-55;
0x0025	0x3037      	MOVLW      55
0x0026	0x025F      	SUBWF      FARG_mult_dato, 0
0x0027	0x00F0      	MOVWF      R0
0x0028	0x282C      	GOTO       L_end_mult
;uart_manager.c,16 :: 		}else{
L_mult14:
;uart_manager.c,17 :: 		return dato-48;
0x0029	0x3030      	MOVLW      48
0x002A	0x025F      	SUBWF      FARG_mult_dato, 0
0x002B	0x00F0      	MOVWF      R0
;uart_manager.c,19 :: 		}
L_end_mult:
0x002C	0x0008      	RETURN
; end of _mult
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x002D	0x1683      	BSF        STATUS, 5
0x002E	0x1303      	BCF        STATUS, 6
0x002F	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0030	0x3090      	MOVLW      144
0x0031	0x1283      	BCF        STATUS, 5
0x0032	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0033	0x1683      	BSF        STATUS, 5
0x0034	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0035	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0036	0x1283      	BCF        STATUS, 5
0x0037	0x1E8C      	BTFSS      PIR1, 5
0x0038	0x283C      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0039	0x081A      	MOVF       RCREG, 0
0x003A	0x00F0      	MOVWF      R0
0x003B	0x2836      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x003C	0x0008      	RETURN
; end of _UART1_Init
_readData:
;uart_manager.c,2 :: 		unsigned char readData(){
;uart_manager.c,4 :: 		PORTB = 0x00;
0x003D	0x1283      	BCF        STATUS, 5
0x003E	0x1303      	BCF        STATUS, 6
0x003F	0x0186      	CLRF       PORTB
;uart_manager.c,5 :: 		while (1){
L_readData11:
;uart_manager.c,6 :: 		if(UART1_Data_Ready()){
0x0040	0x200D      	CALL       _UART1_Data_Ready
0x0041	0x0870      	MOVF       R0, 0
0x0042	0x1903      	BTFSC      STATUS, 2
0x0043	0x2848      	GOTO       L_readData13
;uart_manager.c,7 :: 		dato = UART1_Read();
0x0044	0x2014      	CALL       _UART1_Read
;uart_manager.c,8 :: 		PORTB = 0xFF;
0x0045	0x30FF      	MOVLW      255
0x0046	0x0086      	MOVWF      PORTB
;uart_manager.c,9 :: 		return dato;
0x0047	0x2849      	GOTO       L_end_readData
;uart_manager.c,10 :: 		}
L_readData13:
;uart_manager.c,11 :: 		}
0x0048	0x2840      	GOTO       L_readData11
;uart_manager.c,12 :: 		}
L_end_readData:
0x0049	0x0008      	RETURN
; end of _readData
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x004A	0x1283      	BCF        STATUS, 5
0x004B	0x1303      	BCF        STATUS, 6
0x004C	0x083E      	MOVF       ___DoICPAddr+1, 0
0x004D	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x004E	0x083D      	MOVF       ___DoICPAddr, 0
0x004F	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0050	0x0008      	RETURN
; end of _____DoICP
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x0051	0x1283      	BCF        STATUS, 5
0x0052	0x1303      	BCF        STATUS, 6
0x0053	0x01E1      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0054	0x085F      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x0055	0x0084      	MOVWF      FSR
0x0056	0x0800      	MOVF       INDF, 0
0x0057	0x00E0      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x0058	0x0860      	MOVF       UART1_Write_Text_data__L0, 0
0x0059	0x3A00      	XORLW      0
0x005A	0x1903      	BTFSC      STATUS, 2
0x005B	0x2866      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x005C	0x0860      	MOVF       UART1_Write_Text_data__L0, 0
0x005D	0x00E2      	MOVWF      FARG_UART1_Write_data_
0x005E	0x2003      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x005F	0x0AE1      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x0060	0x0861      	MOVF       UART1_Write_Text_counter_L0, 0
0x0061	0x075F      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0062	0x0084      	MOVWF      FSR
0x0063	0x0800      	MOVF       INDF, 0
0x0064	0x00E0      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x0065	0x2858      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x0066	0x0008      	RETURN
; end of _UART1_Write_Text
_write_eeprom:
;eeprom_manager.c,22 :: 		void write_eeprom(char * trama){
;eeprom_manager.c,24 :: 		unsigned char i = 0, addrh = trama[1], addr = trama[2], size = trama[0]+5;
0x0067	0x1283      	BCF        STATUS, 5
0x0068	0x1303      	BCF        STATUS, 6
0x0069	0x01DE      	CLRF       write_eeprom_i_L0
0x006A	0x0A59      	INCF       FARG_write_eeprom_trama, 0
0x006B	0x0084      	MOVWF      FSR
0x006C	0x0800      	MOVF       INDF, 0
0x006D	0x00F4      	MOVWF      R4
0x006E	0x0874      	MOVF       R4, 0
0x006F	0x00DA      	MOVWF      write_eeprom_addrh_L0
0x0070	0x3002      	MOVLW      2
0x0071	0x0759      	ADDWF      FARG_write_eeprom_trama, 0
0x0072	0x0084      	MOVWF      FSR
0x0073	0x0800      	MOVF       INDF, 0
0x0074	0x00F3      	MOVWF      R3
0x0075	0x0873      	MOVF       R3, 0
0x0076	0x00DB      	MOVWF      write_eeprom_addr_L0
;eeprom_manager.c,25 :: 		unsigned int dir = (addrh << 8 | addr)/2;
0x0077	0x0874      	MOVF       R4, 0
0x0078	0x00F1      	MOVWF      R0+1
0x0079	0x01F0      	CLRF       R0
0x007A	0x0873      	MOVF       R3, 0
0x007B	0x0470      	IORWF      R0, 0
0x007C	0x00F2      	MOVWF      R2
0x007D	0x0871      	MOVF       R0+1, 0
0x007E	0x00F3      	MOVWF      R2+1
0x007F	0x3000      	MOVLW      0
0x0080	0x04F3      	IORWF      R2+1, 1
0x0081	0x0872      	MOVF       R2, 0
0x0082	0x00F4      	MOVWF      R4
0x0083	0x0873      	MOVF       R2+1, 0
0x0084	0x00F5      	MOVWF      R4+1
0x0085	0x0CF5      	RRF        R4+1, 1
0x0086	0x0CF4      	RRF        R4, 1
0x0087	0x13F5      	BCF        R4+1, 7
0x0088	0x0874      	MOVF       R4, 0
0x0089	0x00DC      	MOVWF      write_eeprom_dir_L0
0x008A	0x0875      	MOVF       R4+1, 0
0x008B	0x00DD      	MOVWF      write_eeprom_dir_L0+1
;eeprom_manager.c,26 :: 		addrh = dir>>8;
0x008C	0x0875      	MOVF       R4+1, 0
0x008D	0x00F0      	MOVWF      R0
0x008E	0x01F1      	CLRF       R0+1
0x008F	0x0870      	MOVF       R0, 0
0x0090	0x00DA      	MOVWF      write_eeprom_addrh_L0
;eeprom_manager.c,27 :: 		addr = dir;
0x0091	0x0874      	MOVF       R4, 0
0x0092	0x00DB      	MOVWF      write_eeprom_addr_L0
;eeprom_manager.c,28 :: 		PORTB = 0xFF;
0x0093	0x30FF      	MOVLW      255
0x0094	0x0086      	MOVWF      PORTB
;eeprom_manager.c,29 :: 		if(!((dir==0x0000)||(dir>0x1FFF))){
0x0095	0x3000      	MOVLW      0
0x0096	0x0675      	XORWF      R4+1, 0
0x0097	0x1D03      	BTFSS      STATUS, 2
0x0098	0x289B      	GOTO       L__write_eeprom35
0x0099	0x3000      	MOVLW      0
0x009A	0x0674      	XORWF      R4, 0
L__write_eeprom35:
0x009B	0x1903      	BTFSC      STATUS, 2
0x009C	0x28A7      	GOTO       L_write_eeprom3
0x009D	0x085D      	MOVF       write_eeprom_dir_L0+1, 0
0x009E	0x3C1F      	SUBLW      31
0x009F	0x1D03      	BTFSS      STATUS, 2
0x00A0	0x28A3      	GOTO       L__write_eeprom36
0x00A1	0x085C      	MOVF       write_eeprom_dir_L0, 0
0x00A2	0x3CFF      	SUBLW      255
L__write_eeprom36:
0x00A3	0x1C03      	BTFSS      STATUS, 0
0x00A4	0x28A7      	GOTO       L_write_eeprom3
0x00A5	0x01F0      	CLRF       R0
0x00A6	0x28A9      	GOTO       L_write_eeprom2
L_write_eeprom3:
0x00A7	0x3001      	MOVLW      1
0x00A8	0x00F0      	MOVWF      R0
L_write_eeprom2:
0x00A9	0x0870      	MOVF       R0, 0
0x00AA	0x1D03      	BTFSS      STATUS, 2
0x00AB	0x28FB      	GOTO       L_write_eeprom4
;eeprom_manager.c,30 :: 		for(i = 0; i<trama[0]/2; i++){
0x00AC	0x01DE      	CLRF       write_eeprom_i_L0
L_write_eeprom5:
0x00AD	0x0859      	MOVF       FARG_write_eeprom_trama, 0
0x00AE	0x0084      	MOVWF      FSR
0x00AF	0x0800      	MOVF       INDF, 0
0x00B0	0x00F2      	MOVWF      R2
0x00B1	0x0872      	MOVF       R2, 0
0x00B2	0x00F1      	MOVWF      R1
0x00B3	0x0CF1      	RRF        R1, 1
0x00B4	0x13F1      	BCF        R1, 7
0x00B5	0x0871      	MOVF       R1, 0
0x00B6	0x025E      	SUBWF      write_eeprom_i_L0, 0
0x00B7	0x1803      	BTFSC      STATUS, 0
0x00B8	0x28FB      	GOTO       L_write_eeprom6
;eeprom_manager.c,31 :: 		EEADR = addr;
0x00B9	0x085B      	MOVF       write_eeprom_addr_L0, 0
0x00BA	0x1703      	BSF        STATUS, 6
0x00BB	0x008D      	MOVWF      EEADR
;eeprom_manager.c,32 :: 		EEADRH = addrh;
0x00BC	0x1303      	BCF        STATUS, 6
0x00BD	0x085A      	MOVF       write_eeprom_addrh_L0, 0
0x00BE	0x1703      	BSF        STATUS, 6
0x00BF	0x008F      	MOVWF      EEADRH
;eeprom_manager.c,33 :: 		EEDATA = trama[i*2+4];
0x00C0	0x1303      	BCF        STATUS, 6
0x00C1	0x085E      	MOVF       write_eeprom_i_L0, 0
0x00C2	0x00F2      	MOVWF      R2
0x00C3	0x01F3      	CLRF       R2+1
0x00C4	0x0DF2      	RLF        R2, 1
0x00C5	0x0DF3      	RLF        R2+1, 1
0x00C6	0x1072      	BCF        R2, 0
0x00C7	0x3004      	MOVLW      4
0x00C8	0x0772      	ADDWF      R2, 0
0x00C9	0x00F0      	MOVWF      R0
0x00CA	0x0873      	MOVF       R2+1, 0
0x00CB	0x1803      	BTFSC      STATUS, 0
0x00CC	0x3E01      	ADDLW      1
0x00CD	0x00F1      	MOVWF      R0+1
0x00CE	0x0870      	MOVF       R0, 0
0x00CF	0x0759      	ADDWF      FARG_write_eeprom_trama, 0
0x00D0	0x0084      	MOVWF      FSR
0x00D1	0x0800      	MOVF       INDF, 0
0x00D2	0x1703      	BSF        STATUS, 6
0x00D3	0x008C      	MOVWF      EEDATA
;eeprom_manager.c,34 :: 		EEDATH = trama[i*2+5];
0x00D4	0x3005      	MOVLW      5
0x00D5	0x0772      	ADDWF      R2, 0
0x00D6	0x00F0      	MOVWF      R0
0x00D7	0x0873      	MOVF       R2+1, 0
0x00D8	0x1803      	BTFSC      STATUS, 0
0x00D9	0x3E01      	ADDLW      1
0x00DA	0x00F1      	MOVWF      R0+1
0x00DB	0x0870      	MOVF       R0, 0
0x00DC	0x1303      	BCF        STATUS, 6
0x00DD	0x0759      	ADDWF      FARG_write_eeprom_trama, 0
0x00DE	0x0084      	MOVWF      FSR
0x00DF	0x0800      	MOVF       INDF, 0
0x00E0	0x1703      	BSF        STATUS, 6
0x00E1	0x008E      	MOVWF      EEDATH
;eeprom_manager.c,35 :: 		EECON1.EEPGD = 1;
0x00E2	0x1683      	BSF        STATUS, 5
0x00E3	0x178C      	BSF        EECON1, 7
;eeprom_manager.c,36 :: 		EECON1.WREN = 1;
0x00E4	0x150C      	BSF        EECON1, 2
;eeprom_manager.c,37 :: 		INTCON.GIE = 0;
0x00E5	0x138B      	BCF        INTCON, 7
;eeprom_manager.c,38 :: 		EECON2 = 0x55;
0x00E6	0x3055      	MOVLW      85
0x00E7	0x008D      	MOVWF      EECON2
;eeprom_manager.c,39 :: 		EECON2 = 0xAA;
0x00E8	0x30AA      	MOVLW      170
0x00E9	0x008D      	MOVWF      EECON2
;eeprom_manager.c,40 :: 		EECON1.WR = 1;
0x00EA	0x148C      	BSF        EECON1, 1
;eeprom_manager.c,42 :: 		nop
0x00EB	0x0000      	NOP
;eeprom_manager.c,43 :: 		nop
0x00EC	0x0000      	NOP
;eeprom_manager.c,45 :: 		while(EECON1.WR);
L_write_eeprom8:
0x00ED	0x1C8C      	BTFSS      EECON1, 1
0x00EE	0x28F0      	GOTO       L_write_eeprom9
0x00EF	0x28ED      	GOTO       L_write_eeprom8
L_write_eeprom9:
;eeprom_manager.c,46 :: 		INTCON.GIE = 1;
0x00F0	0x178B      	BSF        INTCON, 7
;eeprom_manager.c,47 :: 		if(addr == 0xFF) addrh+=0x01;
0x00F1	0x1283      	BCF        STATUS, 5
0x00F2	0x1303      	BCF        STATUS, 6
0x00F3	0x085B      	MOVF       write_eeprom_addr_L0, 0
0x00F4	0x3AFF      	XORLW      255
0x00F5	0x1D03      	BTFSS      STATUS, 2
0x00F6	0x28F8      	GOTO       L_write_eeprom10
0x00F7	0x0ADA      	INCF       write_eeprom_addrh_L0, 1
L_write_eeprom10:
;eeprom_manager.c,48 :: 		addr+=0x01;
0x00F8	0x0ADB      	INCF       write_eeprom_addr_L0, 1
;eeprom_manager.c,30 :: 		for(i = 0; i<trama[0]/2; i++){
0x00F9	0x0ADE      	INCF       write_eeprom_i_L0, 1
;eeprom_manager.c,49 :: 		}
0x00FA	0x28AD      	GOTO       L_write_eeprom5
L_write_eeprom6:
;eeprom_manager.c,50 :: 		}
L_write_eeprom4:
;eeprom_manager.c,51 :: 		UART1_Write_Text("OK\n");
0x00FB	0x3039      	MOVLW      ?lstr1_Ejecutor
0x00FC	0x00DF      	MOVWF      FARG_UART1_Write_Text_uart_text
0x00FD	0x2051      	CALL       _UART1_Write_Text
;eeprom_manager.c,52 :: 		}
L_end_write_eeprom:
0x00FE	0x0008      	RETURN
; end of _write_eeprom
_check_sum:
;uart_manager.c,28 :: 		unsigned char check_sum(unsigned char * trama) {
;uart_manager.c,29 :: 		unsigned char checksum, j = 0x00;
0x00FF	0x1283      	BCF        STATUS, 5
0x0100	0x1303      	BCF        STATUS, 6
0x0101	0x01DA      	CLRF       check_sum_j_L0
;uart_manager.c,30 :: 		unsigned char size = trama[0]+0x04;
0x0102	0x0859      	MOVF       FARG_check_sum_trama, 0
0x0103	0x0084      	MOVWF      FSR
0x0104	0x3004      	MOVLW      4
0x0105	0x0700      	ADDWF      INDF, 0
0x0106	0x00F0      	MOVWF      R0
0x0107	0x01F1      	CLRF       R0+1
0x0108	0x1803      	BTFSC      STATUS, 0
0x0109	0x0AF1      	INCF       R0+1, 1
0x010A	0x0870      	MOVF       R0, 0
0x010B	0x00F3      	MOVWF      R3
;uart_manager.c,31 :: 		for(j = 0; j<size; j++)
0x010C	0x01DA      	CLRF       check_sum_j_L0
L_check_sum16:
0x010D	0x0873      	MOVF       R3, 0
0x010E	0x025A      	SUBWF      check_sum_j_L0, 0
0x010F	0x1803      	BTFSC      STATUS, 0
0x0110	0x2918      	GOTO       L_check_sum17
;uart_manager.c,33 :: 		checksum += trama[j];
0x0111	0x085A      	MOVF       check_sum_j_L0, 0
0x0112	0x0759      	ADDWF      FARG_check_sum_trama, 0
0x0113	0x0084      	MOVWF      FSR
0x0114	0x0800      	MOVF       INDF, 0
0x0115	0x07F2      	ADDWF      R2, 1
;uart_manager.c,31 :: 		for(j = 0; j<size; j++)
0x0116	0x0ADA      	INCF       check_sum_j_L0, 1
;uart_manager.c,34 :: 		}
0x0117	0x290D      	GOTO       L_check_sum16
L_check_sum17:
;uart_manager.c,35 :: 		checksum = ~checksum + 1;
0x0118	0x0972      	COMF       R2, 0
0x0119	0x00F0      	MOVWF      R0
0x011A	0x0A70      	INCF       R0, 0
0x011B	0x00F1      	MOVWF      R1
0x011C	0x0871      	MOVF       R1, 0
0x011D	0x00F2      	MOVWF      R2
;uart_manager.c,36 :: 		j = (checksum == trama[size]);
0x011E	0x0873      	MOVF       R3, 0
0x011F	0x0759      	ADDWF      FARG_check_sum_trama, 0
0x0120	0x0084      	MOVWF      FSR
0x0121	0x0871      	MOVF       R1, 0
0x0122	0x0600      	XORWF      INDF, 0
0x0123	0x3001      	MOVLW      1
0x0124	0x1D03      	BTFSS      STATUS, 2
0x0125	0x3000      	MOVLW      0
0x0126	0x00F0      	MOVWF      R0
0x0127	0x0870      	MOVF       R0, 0
0x0128	0x00DA      	MOVWF      check_sum_j_L0
;uart_manager.c,37 :: 		checksum = 0;
0x0129	0x01F2      	CLRF       R2
;uart_manager.c,38 :: 		return j;
;uart_manager.c,39 :: 		}
L_end_check_sum:
0x012A	0x0008      	RETURN
; end of _check_sum
_ascii2hex:
;uart_manager.c,20 :: 		unsigned char ascii2hex(){
;uart_manager.c,21 :: 		unsigned char dato = 0x00;
0x012B	0x1283      	BCF        STATUS, 5
0x012C	0x1303      	BCF        STATUS, 6
0x012D	0x01D9      	CLRF       ascii2hex_dato_L0
;uart_manager.c,22 :: 		dato = mult(readData())<<4;
0x012E	0x203D      	CALL       _readData
0x012F	0x0870      	MOVF       R0, 0
0x0130	0x00DF      	MOVWF      FARG_mult_dato
0x0131	0x201F      	CALL       _mult
0x0132	0x0870      	MOVF       R0, 0
0x0133	0x00D9      	MOVWF      ascii2hex_dato_L0
0x0134	0x0DD9      	RLF        ascii2hex_dato_L0, 1
0x0135	0x1059      	BCF        ascii2hex_dato_L0, 0
0x0136	0x0DD9      	RLF        ascii2hex_dato_L0, 1
0x0137	0x1059      	BCF        ascii2hex_dato_L0, 0
0x0138	0x0DD9      	RLF        ascii2hex_dato_L0, 1
0x0139	0x1059      	BCF        ascii2hex_dato_L0, 0
0x013A	0x0DD9      	RLF        ascii2hex_dato_L0, 1
0x013B	0x1059      	BCF        ascii2hex_dato_L0, 0
;uart_manager.c,23 :: 		dato += mult(readData());
0x013C	0x203D      	CALL       _readData
0x013D	0x0870      	MOVF       R0, 0
0x013E	0x00DF      	MOVWF      FARG_mult_dato
0x013F	0x201F      	CALL       _mult
0x0140	0x0859      	MOVF       ascii2hex_dato_L0, 0
0x0141	0x07F0      	ADDWF      R0, 1
0x0142	0x0870      	MOVF       R0, 0
0x0143	0x00D9      	MOVWF      ascii2hex_dato_L0
;uart_manager.c,25 :: 		PORTB = 0xFF;
0x0144	0x30FF      	MOVLW      255
0x0145	0x0086      	MOVWF      PORTB
;uart_manager.c,26 :: 		return dato;
;uart_manager.c,27 :: 		}
L_end_ascii2hex:
0x0146	0x0008      	RETURN
; end of _ascii2hex
_start:
;Ejecutor.c,35 :: 		void start() {
;Ejecutor.c,36 :: 		ANSELH=0X00;
0x0147	0x1683      	BSF        STATUS, 5
0x0148	0x1703      	BSF        STATUS, 6
0x0149	0x0189      	CLRF       ANSELH
;Ejecutor.c,37 :: 		TRISB=0X00;
0x014A	0x0186      	CLRF       TRISB
;Ejecutor.c,38 :: 		PORTB=0XFF;
0x014B	0x30FF      	MOVLW      255
0x014C	0x1283      	BCF        STATUS, 5
0x014D	0x1303      	BCF        STATUS, 6
0x014E	0x0086      	MOVWF      PORTB
;Ejecutor.c,39 :: 		UART1_Init(9600);
0x014F	0x3019      	MOVLW      25
0x0150	0x1683      	BSF        STATUS, 5
0x0151	0x0099      	MOVWF      SPBRG
0x0152	0x1518      	BSF        TXSTA, 2
0x0153	0x202D      	CALL       _UART1_Init
;Ejecutor.c,40 :: 		Delay_ms(1000);
0x0154	0x3006      	MOVLW      6
0x0155	0x00FB      	MOVWF      R11
0x0156	0x3013      	MOVLW      19
0x0157	0x00FC      	MOVWF      R12
0x0158	0x30AD      	MOVLW      173
0x0159	0x00FD      	MOVWF      R13
L_start31:
0x015A	0x0BFD      	DECFSZ     R13, 1
0x015B	0x295A      	GOTO       L_start31
0x015C	0x0BFC      	DECFSZ     R12, 1
0x015D	0x295A      	GOTO       L_start31
0x015E	0x0BFB      	DECFSZ     R11, 1
0x015F	0x295A      	GOTO       L_start31
0x0160	0x0000      	NOP
0x0161	0x0000      	NOP
;Ejecutor.c,41 :: 		PORTB=0X00;
0x0162	0x0186      	CLRF       PORTB
;Ejecutor.c,42 :: 		UART1_Write_Text("MrBurner Ready");
0x0163	0x3020      	MOVLW      ?lstr4_Ejecutor
0x0164	0x00DF      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0165	0x2051      	CALL       _UART1_Write_Text
;Ejecutor.c,43 :: 		}
L_end_start:
0x0166	0x0008      	RETURN
; end of _start
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x0167	0x204A      	CALL       _____DoICP
0x0168	0x118A      	BCF        PCLATH, 3
0x0169	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x016A	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x016B	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x016C	0x0ABD      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x016D	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x016E	0x0ABE      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x016F	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0170	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0171	0x2967      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0172	0x0008      	RETURN
; end of ___CC2DW
_main:
0x0173	0x304D      	MOVLW      77
0x0174	0x1283      	BCF        STATUS, 5
0x0175	0x1303      	BCF        STATUS, 6
0x0176	0x00A0      	MOVWF      ?lstr4_Ejecutor
0x0177	0x3072      	MOVLW      114
0x0178	0x00A1      	MOVWF      33
0x0179	0x3042      	MOVLW      66
0x017A	0x00A2      	MOVWF      34
0x017B	0x3075      	MOVLW      117
0x017C	0x00A3      	MOVWF      35
0x017D	0x3072      	MOVLW      114
0x017E	0x00A4      	MOVWF      36
0x017F	0x306E      	MOVLW      110
0x0180	0x00A5      	MOVWF      37
0x0181	0x3065      	MOVLW      101
0x0182	0x00A6      	MOVWF      38
0x0183	0x3072      	MOVLW      114
0x0184	0x00A7      	MOVWF      39
0x0185	0x3020      	MOVLW      32
0x0186	0x00A8      	MOVWF      40
0x0187	0x3052      	MOVLW      82
0x0188	0x00A9      	MOVWF      41
0x0189	0x3065      	MOVLW      101
0x018A	0x00AA      	MOVWF      42
0x018B	0x3061      	MOVLW      97
0x018C	0x00AB      	MOVWF      43
0x018D	0x3064      	MOVLW      100
0x018E	0x00AC      	MOVWF      44
0x018F	0x3079      	MOVLW      121
0x0190	0x00AD      	MOVWF      45
0x0191	0x01AE      	CLRF       46
0x0192	0x3042      	MOVLW      66
0x0193	0x00AF      	MOVWF      ?lstr2_Ejecutor
0x0194	0x3041      	MOVLW      65
0x0195	0x00B0      	MOVWF      48
0x0196	0x3044      	MOVLW      68
0x0197	0x00B1      	MOVWF      49
0x0198	0x300A      	MOVLW      10
0x0199	0x00B2      	MOVWF      50
0x019A	0x01B3      	CLRF       51
0x019B	0x3053      	MOVLW      83
0x019C	0x00B4      	MOVWF      ?lstr3_Ejecutor
0x019D	0x3054      	MOVLW      84
0x019E	0x00B5      	MOVWF      53
0x019F	0x3052      	MOVLW      82
0x01A0	0x00B6      	MOVWF      54
0x01A1	0x300A      	MOVLW      10
0x01A2	0x00B7      	MOVWF      55
0x01A3	0x01B8      	CLRF       56
0x01A4	0x304F      	MOVLW      79
0x01A5	0x00B9      	MOVWF      ?lstr1_Ejecutor
0x01A6	0x304B      	MOVLW      75
0x01A7	0x00BA      	MOVWF      58
0x01A8	0x300A      	MOVLW      10
0x01A9	0x00BB      	MOVWF      59
0x01AA	0x01BC      	CLRF       60
;Ejecutor.c,4 :: 		void main() {
;Ejecutor.c,5 :: 		unsigned char * trama[21] = {0};
0x01AB	0x01C1      	CLRF       main_trama_L0
0x01AC	0x01C2      	CLRF       main_trama_L0+1
0x01AD	0x01C3      	CLRF       main_trama_L0+2
0x01AE	0x01C4      	CLRF       main_trama_L0+3
0x01AF	0x01C5      	CLRF       main_trama_L0+4
0x01B0	0x01C6      	CLRF       main_trama_L0+5
0x01B1	0x01C7      	CLRF       main_trama_L0+6
0x01B2	0x01C8      	CLRF       main_trama_L0+7
0x01B3	0x01C9      	CLRF       main_trama_L0+8
0x01B4	0x01CA      	CLRF       main_trama_L0+9
0x01B5	0x01CB      	CLRF       main_trama_L0+10
0x01B6	0x01CC      	CLRF       main_trama_L0+11
0x01B7	0x01CD      	CLRF       main_trama_L0+12
0x01B8	0x01CE      	CLRF       main_trama_L0+13
0x01B9	0x01CF      	CLRF       main_trama_L0+14
0x01BA	0x01D0      	CLRF       main_trama_L0+15
0x01BB	0x01D1      	CLRF       main_trama_L0+16
0x01BC	0x01D2      	CLRF       main_trama_L0+17
0x01BD	0x01D3      	CLRF       main_trama_L0+18
0x01BE	0x01D4      	CLRF       main_trama_L0+19
0x01BF	0x01D5      	CLRF       main_trama_L0+20
;Ejecutor.c,6 :: 		unsigned char size = 0x00;
0x01C0	0x01D6      	CLRF       main_size_L0
0x01C1	0x01D7      	CLRF       main_j_L0
;Ejecutor.c,11 :: 		start();
0x01C2	0x2147      	CALL       _start
;Ejecutor.c,12 :: 		while (1) {
L_main19:
;Ejecutor.c,13 :: 		if(UART1_Data_Ready()){
0x01C3	0x200D      	CALL       _UART1_Data_Ready
0x01C4	0x0870      	MOVF       R0, 0
0x01C5	0x1903      	BTFSC      STATUS, 2
0x01C6	0x29FE      	GOTO       L_main21
;Ejecutor.c,14 :: 		byteRecv = readData();
0x01C7	0x203D      	CALL       _readData
;Ejecutor.c,15 :: 		if(byteRecv == ':'){
0x01C8	0x0870      	MOVF       R0, 0
0x01C9	0x3A3A      	XORLW      58
0x01CA	0x1D03      	BTFSS      STATUS, 2
0x01CB	0x29FE      	GOTO       L_main22
;Ejecutor.c,16 :: 		trama[0] = ascii2hex();
0x01CC	0x212B      	CALL       _ascii2hex
0x01CD	0x0870      	MOVF       R0, 0
0x01CE	0x00C1      	MOVWF      main_trama_L0
;Ejecutor.c,17 :: 		size = trama[0] + 0x05;
0x01CF	0x3005      	MOVLW      5
0x01D0	0x0770      	ADDWF      R0, 0
0x01D1	0x00D6      	MOVWF      main_size_L0
;Ejecutor.c,18 :: 		for(j = 1; j<size; j++){
0x01D2	0x3001      	MOVLW      1
0x01D3	0x00D7      	MOVWF      main_j_L0
L_main23:
0x01D4	0x0856      	MOVF       main_size_L0, 0
0x01D5	0x0257      	SUBWF      main_j_L0, 0
0x01D6	0x1803      	BTFSC      STATUS, 0
0x01D7	0x29E2      	GOTO       L_main24
;Ejecutor.c,19 :: 		trama[j] = ascii2hex();
0x01D8	0x0857      	MOVF       main_j_L0, 0
0x01D9	0x3E41      	ADDLW      main_trama_L0
0x01DA	0x00D8      	MOVWF      FLOC__main
0x01DB	0x212B      	CALL       _ascii2hex
0x01DC	0x0858      	MOVF       FLOC__main, 0
0x01DD	0x0084      	MOVWF      FSR
0x01DE	0x0870      	MOVF       R0, 0
0x01DF	0x0080      	MOVWF      INDF
;Ejecutor.c,18 :: 		for(j = 1; j<size; j++){
0x01E0	0x0AD7      	INCF       main_j_L0, 1
;Ejecutor.c,20 :: 		}
0x01E1	0x29D4      	GOTO       L_main23
L_main24:
;Ejecutor.c,21 :: 		check = check_sum(trama);
0x01E2	0x3041      	MOVLW      main_trama_L0
0x01E3	0x00D9      	MOVWF      FARG_check_sum_trama
0x01E4	0x20FF      	CALL       _check_sum
0x01E5	0x0870      	MOVF       R0, 0
0x01E6	0x00C0      	MOVWF      main_check_L0
;Ejecutor.c,22 :: 		check ? write_eeprom(trama) : UART1_Write_Text("BAD\n");
0x01E7	0x0870      	MOVF       R0, 0
0x01E8	0x1903      	BTFSC      STATUS, 2
0x01E9	0x29EE      	GOTO       L_main26
0x01EA	0x3041      	MOVLW      main_trama_L0
0x01EB	0x00D9      	MOVWF      FARG_write_eeprom_trama
0x01EC	0x2067      	CALL       _write_eeprom
0x01ED	0x29F1      	GOTO       L_main27
L_main26:
0x01EE	0x302F      	MOVLW      ?lstr2_Ejecutor
0x01EF	0x00DF      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01F0	0x2051      	CALL       _UART1_Write_Text
L_main27:
;Ejecutor.c,23 :: 		PORTB = 0x00;
0x01F1	0x0186      	CLRF       PORTB
;Ejecutor.c,24 :: 		if(!trama[0] && check) {
0x01F2	0x0841      	MOVF       main_trama_L0, 0
0x01F3	0x1D03      	BTFSS      STATUS, 2
0x01F4	0x29FE      	GOTO       L_main30
0x01F5	0x0840      	MOVF       main_check_L0, 0
0x01F6	0x1903      	BTFSC      STATUS, 2
0x01F7	0x29FE      	GOTO       L_main30
L__main32:
;Ejecutor.c,25 :: 		PORTB = 0xFF;
0x01F8	0x30FF      	MOVLW      255
0x01F9	0x0086      	MOVWF      PORTB
;Ejecutor.c,26 :: 		UART1_Write_Text("STR\n");
0x01FA	0x3034      	MOVLW      ?lstr3_Ejecutor
0x01FB	0x00DF      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01FC	0x2051      	CALL       _UART1_Write_Text
;Ejecutor.c,28 :: 		goto 0x500;
0x01FD	0x2D00      	GOTO       1280
;Ejecutor.c,30 :: 		}
L_main30:
;Ejecutor.c,31 :: 		}
L_main22:
;Ejecutor.c,32 :: 		}
L_main21:
;Ejecutor.c,33 :: 		}
0x01FE	0x29C3      	GOTO       L_main19
;Ejecutor.c,34 :: 		}
L_end_main:
0x01FF	0x29FF      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [10]    _UART1_Write
0x000D       [7]    _UART1_Data_Ready
0x0014      [11]    _UART1_Read
0x001F      [14]    _mult
0x002D      [16]    _UART1_Init
0x003D      [13]    _readData
0x004A       [7]    _____DoICP
0x0051      [22]    _UART1_Write_Text
0x0067     [152]    _write_eeprom
0x00FF      [44]    _check_sum
0x012B      [28]    _ascii2hex
0x0147      [32]    _start
0x0167      [12]    ___CC2DW
0x0173     [141]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020      [15]    ?lstr4_Ejecutor
0x002F       [5]    ?lstr2_Ejecutor
0x0034       [5]    ?lstr3_Ejecutor
0x0039       [4]    ?lstr1_Ejecutor
0x003D       [2]    ___DoICPAddr
0x003F       [1]    ?FLOC___mainT89
0x0040       [1]    main_check_L0
0x0041      [21]    main_trama_L0
0x0056       [1]    main_size_L0
0x0057       [1]    main_j_L0
0x0058       [1]    FLOC__main
0x0059       [1]    FARG_check_sum_trama
0x0059       [1]    ascii2hex_dato_L0
0x0059       [1]    FARG_write_eeprom_trama
0x005A       [1]    write_eeprom_addrh_L0
0x005A       [1]    check_sum_j_L0
0x005B       [1]    write_eeprom_addr_L0
0x005C       [2]    write_eeprom_dir_L0
0x005E       [1]    write_eeprom_i_L0
0x005F       [1]    FARG_mult_dato
0x005F       [1]    FARG_UART1_Write_Text_uart_text
0x0060       [1]    UART1_Write_Text_data__L0
0x0061       [1]    UART1_Write_Text_counter_L0
0x0062       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0189       [1]    ANSELH
0x018C       [1]    EECON1
0x018D       [1]    EECON2
