;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 29/03/2020 10:18:51 p. m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2986      	GOTO       390
_UART1_Write:
;__Lib_UART_c67.c,39 :: 		
;__Lib_UART_c67.c,40 :: 		
L_UART1_Write3:
0x0003	0x1683      	BSF        STATUS, 5
0x0004	0x1303      	BCF        STATUS, 6
0x0005	0x1898      	BTFSC      TXSTA, 1
0x0006	0x2809      	GOTO       L_UART1_Write4
;__Lib_UART_c67.c,41 :: 		
0x0007	0x0000      	NOP
0x0008	0x2803      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_c67.c,42 :: 		
0x0009	0x1283      	BCF        STATUS, 5
0x000A	0x085B      	MOVF       FARG_UART1_Write_data_, 0
0x000B	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.c,43 :: 		
L_end_UART1_Write:
0x000C	0x0008      	RETURN
; end of _UART1_Write
_UART1_Data_Ready:
;__Lib_UART_c67.c,16 :: 		
;__Lib_UART_c67.c,17 :: 		
0x000D	0x3000      	MOVLW      0
0x000E	0x1283      	BCF        STATUS, 5
0x000F	0x1303      	BCF        STATUS, 6
0x0010	0x1A8C      	BTFSC      PIR1, 5
0x0011	0x3001      	MOVLW      1
0x0012	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,18 :: 		
L_end_UART1_Data_Ready:
0x0013	0x0008      	RETURN
; end of _UART1_Data_Ready
_UART1_Read:
;__Lib_UART_c67.c,21 :: 		
;__Lib_UART_c67.c,24 :: 		
0x0014	0x1283      	BCF        STATUS, 5
0x0015	0x1303      	BCF        STATUS, 6
0x0016	0x081A      	MOVF       RCREG, 0
0x0017	0x00F1      	MOVWF      R1
;__Lib_UART_c67.c,25 :: 		
0x0018	0x1C98      	BTFSS      RCSTA, 1
0x0019	0x281C      	GOTO       L_UART1_Read2
;__Lib_UART_c67.c,26 :: 		
0x001A	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.c,27 :: 		
0x001B	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.c,28 :: 		
L_UART1_Read2:
;__Lib_UART_c67.c,29 :: 		
0x001C	0x0871      	MOVF       R1, 0
0x001D	0x00F0      	MOVWF      R0
;__Lib_UART_c67.c,30 :: 		
L_end_UART1_Read:
0x001E	0x0008      	RETURN
; end of _UART1_Read
_____DoICP:
;__Lib_System.c,6 :: 		
;__Lib_System.c,9 :: 		
0x001F	0x1283      	BCF        STATUS, 5
0x0020	0x1303      	BCF        STATUS, 6
0x0021	0x0839      	MOVF       ___DoICPAddr+1, 0
0x0022	0x008A      	MOVWF      PCLATH
;__Lib_System.c,10 :: 		
0x0023	0x0838      	MOVF       ___DoICPAddr, 0
0x0024	0x0082      	MOVWF      PCL
;__Lib_System.c,12 :: 		
L_end_____DoICP:
0x0025	0x0008      	RETURN
; end of _____DoICP
_UART1_Write_Text:
;__Lib_UART_c67.c,47 :: 		
;__Lib_UART_c67.c,48 :: 		
0x0026	0x1283      	BCF        STATUS, 5
0x0027	0x1303      	BCF        STATUS, 6
0x0028	0x01D9      	CLRF       UART1_Write_Text_counter_L0
;__Lib_UART_c67.c,50 :: 		
0x0029	0x0857      	MOVF       FARG_UART1_Write_Text_uart_text, 0
0x002A	0x0084      	MOVWF      FSR
0x002B	0x0800      	MOVF       INDF, 0
0x002C	0x00D8      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,51 :: 		
L_UART1_Write_Text5:
0x002D	0x0858      	MOVF       UART1_Write_Text_data__L0, 0
0x002E	0x3A00      	XORLW      0
0x002F	0x1903      	BTFSC      STATUS, 2
0x0030	0x283B      	GOTO       L_UART1_Write_Text6
;__Lib_UART_c67.c,52 :: 		
0x0031	0x0858      	MOVF       UART1_Write_Text_data__L0, 0
0x0032	0x00DB      	MOVWF      FARG_UART1_Write_data_
0x0033	0x2003      	CALL       _UART1_Write
;__Lib_UART_c67.c,53 :: 		
0x0034	0x0AD9      	INCF       UART1_Write_Text_counter_L0, 1
;__Lib_UART_c67.c,54 :: 		
0x0035	0x0859      	MOVF       UART1_Write_Text_counter_L0, 0
0x0036	0x0757      	ADDWF      FARG_UART1_Write_Text_uart_text, 0
0x0037	0x0084      	MOVWF      FSR
0x0038	0x0800      	MOVF       INDF, 0
0x0039	0x00D8      	MOVWF      UART1_Write_Text_data__L0
;__Lib_UART_c67.c,55 :: 		
0x003A	0x282D      	GOTO       L_UART1_Write_Text5
L_UART1_Write_Text6:
;__Lib_UART_c67.c,56 :: 		
L_end_UART1_Write_Text:
0x003B	0x0008      	RETURN
; end of _UART1_Write_Text
_write_eeprom:
;eeprom_manager.c,22 :: 		void write_eeprom(char addrh,char addr, char datoh ,char dato){
;eeprom_manager.c,23 :: 		EEADR = addr;
0x003C	0x1283      	BCF        STATUS, 5
0x003D	0x1303      	BCF        STATUS, 6
0x003E	0x0858      	MOVF       FARG_write_eeprom_addr, 0
0x003F	0x1703      	BSF        STATUS, 6
0x0040	0x008D      	MOVWF      EEADR
;eeprom_manager.c,24 :: 		EEADRH = addrh;
0x0041	0x1303      	BCF        STATUS, 6
0x0042	0x0857      	MOVF       FARG_write_eeprom_addrh, 0
0x0043	0x1703      	BSF        STATUS, 6
0x0044	0x008F      	MOVWF      EEADRH
;eeprom_manager.c,25 :: 		EEDATA = dato;
0x0045	0x1303      	BCF        STATUS, 6
0x0046	0x085A      	MOVF       FARG_write_eeprom_dato, 0
0x0047	0x1703      	BSF        STATUS, 6
0x0048	0x008C      	MOVWF      EEDATA
;eeprom_manager.c,26 :: 		EEDATH = datoh;
0x0049	0x1303      	BCF        STATUS, 6
0x004A	0x0859      	MOVF       FARG_write_eeprom_datoh, 0
0x004B	0x1703      	BSF        STATUS, 6
0x004C	0x008E      	MOVWF      EEDATH
;eeprom_manager.c,27 :: 		EECON1.EEPGD = 1;
0x004D	0x1683      	BSF        STATUS, 5
0x004E	0x178C      	BSF        EECON1, 7
;eeprom_manager.c,28 :: 		EECON1.WREN = 1;
0x004F	0x150C      	BSF        EECON1, 2
;eeprom_manager.c,29 :: 		INTCON.GIE = 0;
0x0050	0x138B      	BCF        INTCON, 7
;eeprom_manager.c,30 :: 		EECON2 = 0x55;
0x0051	0x3055      	MOVLW      85
0x0052	0x008D      	MOVWF      EECON2
;eeprom_manager.c,31 :: 		EECON2 = 0xAA;
0x0053	0x30AA      	MOVLW      170
0x0054	0x008D      	MOVWF      EECON2
;eeprom_manager.c,32 :: 		EECON1.WR = 1;
0x0055	0x148C      	BSF        EECON1, 1
;eeprom_manager.c,34 :: 		nop
0x0056	0x0000      	NOP
;eeprom_manager.c,35 :: 		nop
0x0057	0x0000      	NOP
;eeprom_manager.c,37 :: 		while(EECON1.WR);
L_write_eeprom2:
0x0058	0x1C8C      	BTFSS      EECON1, 1
0x0059	0x285B      	GOTO       L_write_eeprom3
0x005A	0x2858      	GOTO       L_write_eeprom2
L_write_eeprom3:
;eeprom_manager.c,38 :: 		INTCON.GIE = 1;
0x005B	0x178B      	BSF        INTCON, 7
;eeprom_manager.c,39 :: 		}
L_end_write_eeprom:
0x005C	0x0008      	RETURN
; end of _write_eeprom
_UART1_Init:
;__Lib_UART_c67.c,2 :: 		
;__Lib_UART_c67.c,5 :: 		
0x005D	0x1683      	BSF        STATUS, 5
0x005E	0x1303      	BCF        STATUS, 6
0x005F	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.c,6 :: 		
0x0060	0x3090      	MOVLW      144
0x0061	0x1283      	BCF        STATUS, 5
0x0062	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.c,7 :: 		
0x0063	0x1683      	BSF        STATUS, 5
0x0064	0x1787      	BSF        TRISC7_bit, BitPos(TRISC7_bit+0)
;__Lib_UART_c67.c,8 :: 		
0x0065	0x1307      	BCF        TRISC6_bit, BitPos(TRISC6_bit+0)
;__Lib_UART_c67.c,10 :: 		
L_UART1_Init0:
0x0066	0x1283      	BCF        STATUS, 5
0x0067	0x1E8C      	BTFSS      PIR1, 5
0x0068	0x286C      	GOTO       L_UART1_Init1
;__Lib_UART_c67.c,11 :: 		
0x0069	0x081A      	MOVF       RCREG, 0
0x006A	0x00F0      	MOVWF      R0
0x006B	0x2866      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_c67.c,12 :: 		
L_end_UART1_Init:
0x006C	0x0008      	RETURN
; end of _UART1_Init
_readData:
;uart_manager.c,2 :: 		unsigned char readData(){
;uart_manager.c,4 :: 		PORTB = 0x00;
0x006D	0x1283      	BCF        STATUS, 5
0x006E	0x1303      	BCF        STATUS, 6
0x006F	0x0186      	CLRF       PORTB
;uart_manager.c,5 :: 		while (1){
L_readData4:
;uart_manager.c,6 :: 		if(UART1_Data_Ready()){
0x0070	0x200D      	CALL       _UART1_Data_Ready
0x0071	0x0870      	MOVF       R0, 0
0x0072	0x1903      	BTFSC      STATUS, 2
0x0073	0x2878      	GOTO       L_readData6
;uart_manager.c,7 :: 		dato = UART1_Read();
0x0074	0x2014      	CALL       _UART1_Read
;uart_manager.c,8 :: 		PORTB = 0xFF;
0x0075	0x30FF      	MOVLW      255
0x0076	0x0086      	MOVWF      PORTB
;uart_manager.c,9 :: 		return dato;
0x0077	0x2879      	GOTO       L_end_readData
;uart_manager.c,10 :: 		}
L_readData6:
;uart_manager.c,11 :: 		}
0x0078	0x2870      	GOTO       L_readData4
;uart_manager.c,12 :: 		}
L_end_readData:
0x0079	0x0008      	RETURN
; end of _readData
_mult:
;uart_manager.c,13 :: 		unsigned char mult(unsigned char dato){
;uart_manager.c,14 :: 		if (dato>='A'){
0x007A	0x3041      	MOVLW      65
0x007B	0x1283      	BCF        STATUS, 5
0x007C	0x1303      	BCF        STATUS, 6
0x007D	0x0257      	SUBWF      FARG_mult_dato, 0
0x007E	0x1C03      	BTFSS      STATUS, 0
0x007F	0x2884      	GOTO       L_mult7
;uart_manager.c,15 :: 		return dato-55;
0x0080	0x3037      	MOVLW      55
0x0081	0x0257      	SUBWF      FARG_mult_dato, 0
0x0082	0x00F0      	MOVWF      R0
0x0083	0x2887      	GOTO       L_end_mult
;uart_manager.c,16 :: 		}else{
L_mult7:
;uart_manager.c,17 :: 		return dato-48;
0x0084	0x3030      	MOVLW      48
0x0085	0x0257      	SUBWF      FARG_mult_dato, 0
0x0086	0x00F0      	MOVWF      R0
;uart_manager.c,19 :: 		}
L_end_mult:
0x0087	0x0008      	RETURN
; end of _mult
_check_sum:
;uart_manager.c,28 :: 		unsigned char check_sum(unsigned char * trama) {
;uart_manager.c,29 :: 		unsigned char checksum, j = 0x00;
0x0088	0x1283      	BCF        STATUS, 5
0x0089	0x1303      	BCF        STATUS, 6
0x008A	0x01D4      	CLRF       check_sum_j_L0
;uart_manager.c,30 :: 		unsigned char size = trama[0]+0x04;
0x008B	0x0853      	MOVF       FARG_check_sum_trama, 0
0x008C	0x0084      	MOVWF      FSR
0x008D	0x3004      	MOVLW      4
0x008E	0x0700      	ADDWF      INDF, 0
0x008F	0x00F0      	MOVWF      R0
0x0090	0x01F1      	CLRF       R0+1
0x0091	0x1803      	BTFSC      STATUS, 0
0x0092	0x0AF1      	INCF       R0+1, 1
0x0093	0x0870      	MOVF       R0, 0
0x0094	0x00F3      	MOVWF      R3
;uart_manager.c,31 :: 		for(j = 0; j<size; j++)
0x0095	0x01D4      	CLRF       check_sum_j_L0
L_check_sum9:
0x0096	0x0873      	MOVF       R3, 0
0x0097	0x0254      	SUBWF      check_sum_j_L0, 0
0x0098	0x1803      	BTFSC      STATUS, 0
0x0099	0x28A1      	GOTO       L_check_sum10
;uart_manager.c,33 :: 		checksum += trama[j];
0x009A	0x0854      	MOVF       check_sum_j_L0, 0
0x009B	0x0753      	ADDWF      FARG_check_sum_trama, 0
0x009C	0x0084      	MOVWF      FSR
0x009D	0x0800      	MOVF       INDF, 0
0x009E	0x07F2      	ADDWF      R2, 1
;uart_manager.c,31 :: 		for(j = 0; j<size; j++)
0x009F	0x0AD4      	INCF       check_sum_j_L0, 1
;uart_manager.c,35 :: 		}
0x00A0	0x2896      	GOTO       L_check_sum9
L_check_sum10:
;uart_manager.c,36 :: 		checksum = ~checksum + 1;
0x00A1	0x0972      	COMF       R2, 0
0x00A2	0x00F0      	MOVWF      R0
0x00A3	0x0A70      	INCF       R0, 0
0x00A4	0x00F1      	MOVWF      R1
0x00A5	0x0871      	MOVF       R1, 0
0x00A6	0x00F2      	MOVWF      R2
;uart_manager.c,40 :: 		j = (checksum == trama[size]);
0x00A7	0x0873      	MOVF       R3, 0
0x00A8	0x0753      	ADDWF      FARG_check_sum_trama, 0
0x00A9	0x0084      	MOVWF      FSR
0x00AA	0x0871      	MOVF       R1, 0
0x00AB	0x0600      	XORWF      INDF, 0
0x00AC	0x3001      	MOVLW      1
0x00AD	0x1D03      	BTFSS      STATUS, 2
0x00AE	0x3000      	MOVLW      0
0x00AF	0x00F0      	MOVWF      R0
0x00B0	0x0870      	MOVF       R0, 0
0x00B1	0x00D4      	MOVWF      check_sum_j_L0
;uart_manager.c,41 :: 		checksum = 0;
0x00B2	0x01F2      	CLRF       R2
;uart_manager.c,42 :: 		return j;
;uart_manager.c,43 :: 		}
L_end_check_sum:
0x00B3	0x0008      	RETURN
; end of _check_sum
_ascii2hex:
;uart_manager.c,20 :: 		unsigned char ascii2hex(){
;uart_manager.c,21 :: 		unsigned char dato = 0x00;
0x00B4	0x1283      	BCF        STATUS, 5
0x00B5	0x1303      	BCF        STATUS, 6
0x00B6	0x01D3      	CLRF       ascii2hex_dato_L0
;uart_manager.c,22 :: 		dato = mult(readData())<<4;
0x00B7	0x206D      	CALL       _readData
0x00B8	0x0870      	MOVF       R0, 0
0x00B9	0x00D7      	MOVWF      FARG_mult_dato
0x00BA	0x207A      	CALL       _mult
0x00BB	0x0870      	MOVF       R0, 0
0x00BC	0x00D3      	MOVWF      ascii2hex_dato_L0
0x00BD	0x0DD3      	RLF        ascii2hex_dato_L0, 1
0x00BE	0x1053      	BCF        ascii2hex_dato_L0, 0
0x00BF	0x0DD3      	RLF        ascii2hex_dato_L0, 1
0x00C0	0x1053      	BCF        ascii2hex_dato_L0, 0
0x00C1	0x0DD3      	RLF        ascii2hex_dato_L0, 1
0x00C2	0x1053      	BCF        ascii2hex_dato_L0, 0
0x00C3	0x0DD3      	RLF        ascii2hex_dato_L0, 1
0x00C4	0x1053      	BCF        ascii2hex_dato_L0, 0
;uart_manager.c,23 :: 		dato += mult(readData());
0x00C5	0x206D      	CALL       _readData
0x00C6	0x0870      	MOVF       R0, 0
0x00C7	0x00D7      	MOVWF      FARG_mult_dato
0x00C8	0x207A      	CALL       _mult
0x00C9	0x0853      	MOVF       ascii2hex_dato_L0, 0
0x00CA	0x07F0      	ADDWF      R0, 1
0x00CB	0x0870      	MOVF       R0, 0
0x00CC	0x00D3      	MOVWF      ascii2hex_dato_L0
;uart_manager.c,25 :: 		PORTB = 0xFF;
0x00CD	0x30FF      	MOVLW      255
0x00CE	0x0086      	MOVWF      PORTB
;uart_manager.c,26 :: 		return dato;
;uart_manager.c,27 :: 		}
L_end_ascii2hex:
0x00CF	0x0008      	RETURN
; end of _ascii2hex
_write_intel:
;Escritor.c,33 :: 		void write_intel(unsigned char * trama){
;Escritor.c,34 :: 		unsigned char i = 0, addrh = trama[1], addr = trama[2], size = trama[0]+5;
0x00D0	0x1283      	BCF        STATUS, 5
0x00D1	0x1303      	BCF        STATUS, 6
0x00D2	0x01D6      	CLRF       write_intel_i_L0
0x00D3	0x0A53      	INCF       FARG_write_intel_trama, 0
0x00D4	0x0084      	MOVWF      FSR
0x00D5	0x0800      	MOVF       INDF, 0
0x00D6	0x00F3      	MOVWF      R3
0x00D7	0x3002      	MOVLW      2
0x00D8	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x00D9	0x00F5      	MOVWF      R5
;Escritor.c,35 :: 		unsigned int dir = (addrh << 8 | addr)/2;
0x00DA	0x0873      	MOVF       R3, 0
0x00DB	0x00F1      	MOVWF      R0+1
0x00DC	0x01F0      	CLRF       R0
0x00DD	0x0875      	MOVF       R5, 0
0x00DE	0x0084      	MOVWF      FSR
0x00DF	0x0800      	MOVF       INDF, 0
0x00E0	0x0470      	IORWF      R0, 0
0x00E1	0x00F3      	MOVWF      R3
0x00E2	0x0871      	MOVF       R0+1, 0
0x00E3	0x00F4      	MOVWF      R3+1
0x00E4	0x3000      	MOVLW      0
0x00E5	0x04F4      	IORWF      R3+1, 1
0x00E6	0x0873      	MOVF       R3, 0
0x00E7	0x00F0      	MOVWF      R0
0x00E8	0x0874      	MOVF       R3+1, 0
0x00E9	0x00F1      	MOVWF      R0+1
0x00EA	0x0CF1      	RRF        R0+1, 1
0x00EB	0x0CF0      	RRF        R0, 1
0x00EC	0x13F1      	BCF        R0+1, 7
0x00ED	0x0870      	MOVF       R0, 0
0x00EE	0x00D4      	MOVWF      write_intel_dir_L0
0x00EF	0x0871      	MOVF       R0+1, 0
0x00F0	0x00D5      	MOVWF      write_intel_dir_L0+1
;Escritor.c,36 :: 		trama[2] = dir;
0x00F1	0x0875      	MOVF       R5, 0
0x00F2	0x0084      	MOVWF      FSR
0x00F3	0x0870      	MOVF       R0, 0
0x00F4	0x0080      	MOVWF      INDF
;Escritor.c,37 :: 		trama[1] = dir>>8;
0x00F5	0x0A53      	INCF       FARG_write_intel_trama, 0
0x00F6	0x0084      	MOVWF      FSR
0x00F7	0x0855      	MOVF       write_intel_dir_L0+1, 0
0x00F8	0x00F0      	MOVWF      R0
0x00F9	0x01F1      	CLRF       R0+1
0x00FA	0x0870      	MOVF       R0, 0
0x00FB	0x0080      	MOVWF      INDF
;Escritor.c,38 :: 		PORTB = 0xFF;
0x00FC	0x30FF      	MOVLW      255
0x00FD	0x0086      	MOVWF      PORTB
;Escritor.c,39 :: 		for(i = 0; i<trama[0]; i+=2){
0x00FE	0x01D6      	CLRF       write_intel_i_L0
L_write_intel21:
0x00FF	0x0853      	MOVF       FARG_write_intel_trama, 0
0x0100	0x0084      	MOVWF      FSR
0x0101	0x0800      	MOVF       INDF, 0
0x0102	0x0256      	SUBWF      write_intel_i_L0, 0
0x0103	0x1803      	BTFSC      STATUS, 0
0x0104	0x2956      	GOTO       L_write_intel22
;Escritor.c,40 :: 		delay_ms(1);
0x0105	0x3002      	MOVLW      2
0x0106	0x00FC      	MOVWF      R12
0x0107	0x304B      	MOVLW      75
0x0108	0x00FD      	MOVWF      R13
L_write_intel24:
0x0109	0x0BFD      	DECFSZ     R13, 1
0x010A	0x2909      	GOTO       L_write_intel24
0x010B	0x0BFC      	DECFSZ     R12, 1
0x010C	0x2909      	GOTO       L_write_intel24
;Escritor.c,41 :: 		write_eeprom(trama[1], trama[2], trama[i+0x05], trama[i+0x04]);
0x010D	0x0A53      	INCF       FARG_write_intel_trama, 0
0x010E	0x0084      	MOVWF      FSR
0x010F	0x0800      	MOVF       INDF, 0
0x0110	0x00D7      	MOVWF      FARG_write_eeprom_addrh
0x0111	0x3002      	MOVLW      2
0x0112	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x0113	0x0084      	MOVWF      FSR
0x0114	0x0800      	MOVF       INDF, 0
0x0115	0x00D8      	MOVWF      FARG_write_eeprom_addr
0x0116	0x3005      	MOVLW      5
0x0117	0x0756      	ADDWF      write_intel_i_L0, 0
0x0118	0x00F0      	MOVWF      R0
0x0119	0x01F1      	CLRF       R0+1
0x011A	0x1803      	BTFSC      STATUS, 0
0x011B	0x0AF1      	INCF       R0+1, 1
0x011C	0x0870      	MOVF       R0, 0
0x011D	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x011E	0x0084      	MOVWF      FSR
0x011F	0x0800      	MOVF       INDF, 0
0x0120	0x00D9      	MOVWF      FARG_write_eeprom_datoh
0x0121	0x3004      	MOVLW      4
0x0122	0x0756      	ADDWF      write_intel_i_L0, 0
0x0123	0x00F0      	MOVWF      R0
0x0124	0x01F1      	CLRF       R0+1
0x0125	0x1803      	BTFSC      STATUS, 0
0x0126	0x0AF1      	INCF       R0+1, 1
0x0127	0x0870      	MOVF       R0, 0
0x0128	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x0129	0x0084      	MOVWF      FSR
0x012A	0x0800      	MOVF       INDF, 0
0x012B	0x00DA      	MOVWF      FARG_write_eeprom_dato
0x012C	0x203C      	CALL       _write_eeprom
;Escritor.c,42 :: 		if(trama[2] == 0xFF) trama[1]+=0x01;
0x012D	0x3002      	MOVLW      2
0x012E	0x1283      	BCF        STATUS, 5
0x012F	0x1303      	BCF        STATUS, 6
0x0130	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x0131	0x0084      	MOVWF      FSR
0x0132	0x0800      	MOVF       INDF, 0
0x0133	0x3AFF      	XORLW      255
0x0134	0x1D03      	BTFSS      STATUS, 2
0x0135	0x2940      	GOTO       L_write_intel25
0x0136	0x0A53      	INCF       FARG_write_intel_trama, 0
0x0137	0x00F1      	MOVWF      R1
0x0138	0x0871      	MOVF       R1, 0
0x0139	0x0084      	MOVWF      FSR
0x013A	0x0A00      	INCF       INDF, 0
0x013B	0x00F0      	MOVWF      R0
0x013C	0x0871      	MOVF       R1, 0
0x013D	0x0084      	MOVWF      FSR
0x013E	0x0870      	MOVF       R0, 0
0x013F	0x0080      	MOVWF      INDF
L_write_intel25:
;Escritor.c,43 :: 		trama[2]+=0x01;
0x0140	0x3002      	MOVLW      2
0x0141	0x0753      	ADDWF      FARG_write_intel_trama, 0
0x0142	0x00F1      	MOVWF      R1
0x0143	0x0871      	MOVF       R1, 0
0x0144	0x0084      	MOVWF      FSR
0x0145	0x0A00      	INCF       INDF, 0
0x0146	0x00F0      	MOVWF      R0
0x0147	0x0871      	MOVF       R1, 0
0x0148	0x0084      	MOVWF      FSR
0x0149	0x0870      	MOVF       R0, 0
0x014A	0x0080      	MOVWF      INDF
;Escritor.c,44 :: 		delay_ms(1);
0x014B	0x3002      	MOVLW      2
0x014C	0x00FC      	MOVWF      R12
0x014D	0x304B      	MOVLW      75
0x014E	0x00FD      	MOVWF      R13
L_write_intel26:
0x014F	0x0BFD      	DECFSZ     R13, 1
0x0150	0x294F      	GOTO       L_write_intel26
0x0151	0x0BFC      	DECFSZ     R12, 1
0x0152	0x294F      	GOTO       L_write_intel26
;Escritor.c,39 :: 		for(i = 0; i<trama[0]; i+=2){
0x0153	0x3002      	MOVLW      2
0x0154	0x07D6      	ADDWF      write_intel_i_L0, 1
;Escritor.c,45 :: 		}
0x0155	0x28FF      	GOTO       L_write_intel21
L_write_intel22:
;Escritor.c,46 :: 		UART1_Write_Text("OK\n");
0x0156	0x3025      	MOVLW      ?lstr2_Escritor
0x0157	0x00D7      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0158	0x2026      	CALL       _UART1_Write_Text
;Escritor.c,47 :: 		}
L_end_write_intel:
0x0159	0x0008      	RETURN
; end of _write_intel
___CC2DW:
;__Lib_System.c,134 :: 		
;__Lib_System.c,137 :: 		
_CC2D_Loop1:
;__Lib_System.c,139 :: 		
0x015A	0x201F      	CALL       _____DoICP
0x015B	0x118A      	BCF        PCLATH, 3
0x015C	0x120A      	BCF        PCLATH, 4
;__Lib_System.c,141 :: 		
0x015D	0x0080      	MOVWF      INDF
;__Lib_System.c,142 :: 		
0x015E	0x0A84      	INCF       FSR, 1
;__Lib_System.c,143 :: 		
0x015F	0x0AB8      	INCF       ___DoICPAddr, 1
;__Lib_System.c,145 :: 		
0x0160	0x1903      	BTFSC      STATUS, 2
;__Lib_System.c,146 :: 		
0x0161	0x0AB9      	INCF       ___DoICPAddr+1, 1
;__Lib_System.c,147 :: 		
0x0162	0x03F0      	DECF       R0, 1
;__Lib_System.c,149 :: 		
0x0163	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,150 :: 		
0x0164	0x295A      	GOTO       _CC2D_Loop1
;__Lib_System.c,152 :: 		
L_end___CC2DW:
0x0165	0x0008      	RETURN
; end of ___CC2DW
_start:
;Escritor.c,49 :: 		void start() {
;Escritor.c,50 :: 		ANSELH=0X00;
0x0166	0x1683      	BSF        STATUS, 5
0x0167	0x1703      	BSF        STATUS, 6
0x0168	0x0189      	CLRF       ANSELH
;Escritor.c,51 :: 		TRISB=0X00;
0x0169	0x0186      	CLRF       TRISB
;Escritor.c,52 :: 		PORTB=0XFF;
0x016A	0x30FF      	MOVLW      255
0x016B	0x1283      	BCF        STATUS, 5
0x016C	0x1303      	BCF        STATUS, 6
0x016D	0x0086      	MOVWF      PORTB
;Escritor.c,53 :: 		UART1_Init(9600);
0x016E	0x3019      	MOVLW      25
0x016F	0x1683      	BSF        STATUS, 5
0x0170	0x0099      	MOVWF      SPBRG
0x0171	0x1518      	BSF        TXSTA, 2
0x0172	0x205D      	CALL       _UART1_Init
;Escritor.c,54 :: 		Delay_ms(1000);
0x0173	0x3006      	MOVLW      6
0x0174	0x00FB      	MOVWF      R11
0x0175	0x3013      	MOVLW      19
0x0176	0x00FC      	MOVWF      R12
0x0177	0x30AD      	MOVLW      173
0x0178	0x00FD      	MOVWF      R13
L_start27:
0x0179	0x0BFD      	DECFSZ     R13, 1
0x017A	0x2979      	GOTO       L_start27
0x017B	0x0BFC      	DECFSZ     R12, 1
0x017C	0x2979      	GOTO       L_start27
0x017D	0x0BFB      	DECFSZ     R11, 1
0x017E	0x2979      	GOTO       L_start27
0x017F	0x0000      	NOP
0x0180	0x0000      	NOP
;Escritor.c,55 :: 		PORTB=0X00;
0x0181	0x0186      	CLRF       PORTB
;Escritor.c,56 :: 		UART1_Write_Text("MrBurner Ready");
0x0182	0x3029      	MOVLW      ?lstr3_Escritor
0x0183	0x00D7      	MOVWF      FARG_UART1_Write_Text_uart_text
0x0184	0x2026      	CALL       _UART1_Write_Text
;Escritor.c,57 :: 		}
L_end_start:
0x0185	0x0008      	RETURN
; end of _start
_main:
0x0186	0x3042      	MOVLW      66
0x0187	0x1283      	BCF        STATUS, 5
0x0188	0x1303      	BCF        STATUS, 6
0x0189	0x00A0      	MOVWF      ?lstr1_Escritor
0x018A	0x3041      	MOVLW      65
0x018B	0x00A1      	MOVWF      33
0x018C	0x3044      	MOVLW      68
0x018D	0x00A2      	MOVWF      34
0x018E	0x300A      	MOVLW      10
0x018F	0x00A3      	MOVWF      35
0x0190	0x01A4      	CLRF       36
0x0191	0x304F      	MOVLW      79
0x0192	0x00A5      	MOVWF      ?lstr2_Escritor
0x0193	0x304B      	MOVLW      75
0x0194	0x00A6      	MOVWF      38
0x0195	0x300A      	MOVLW      10
0x0196	0x00A7      	MOVWF      39
0x0197	0x01A8      	CLRF       40
0x0198	0x304D      	MOVLW      77
0x0199	0x00A9      	MOVWF      ?lstr3_Escritor
0x019A	0x3072      	MOVLW      114
0x019B	0x00AA      	MOVWF      42
0x019C	0x3042      	MOVLW      66
0x019D	0x00AB      	MOVWF      43
0x019E	0x3075      	MOVLW      117
0x019F	0x00AC      	MOVWF      44
0x01A0	0x3072      	MOVLW      114
0x01A1	0x00AD      	MOVWF      45
0x01A2	0x306E      	MOVLW      110
0x01A3	0x00AE      	MOVWF      46
0x01A4	0x3065      	MOVLW      101
0x01A5	0x00AF      	MOVWF      47
0x01A6	0x3072      	MOVLW      114
0x01A7	0x00B0      	MOVWF      48
0x01A8	0x3020      	MOVLW      32
0x01A9	0x00B1      	MOVWF      49
0x01AA	0x3052      	MOVLW      82
0x01AB	0x00B2      	MOVWF      50
0x01AC	0x3065      	MOVLW      101
0x01AD	0x00B3      	MOVWF      51
0x01AE	0x3061      	MOVLW      97
0x01AF	0x00B4      	MOVWF      52
0x01B0	0x3064      	MOVLW      100
0x01B1	0x00B5      	MOVWF      53
0x01B2	0x3079      	MOVLW      121
0x01B3	0x00B6      	MOVWF      54
0x01B4	0x01B7      	CLRF       55
;Escritor.c,9 :: 		void main() {
;Escritor.c,10 :: 		unsigned char * trama[21] = {0};
0x01B5	0x01BB      	CLRF       main_trama_L0
0x01B6	0x01BC      	CLRF       main_trama_L0+1
0x01B7	0x01BD      	CLRF       main_trama_L0+2
0x01B8	0x01BE      	CLRF       main_trama_L0+3
0x01B9	0x01BF      	CLRF       main_trama_L0+4
0x01BA	0x01C0      	CLRF       main_trama_L0+5
0x01BB	0x01C1      	CLRF       main_trama_L0+6
0x01BC	0x01C2      	CLRF       main_trama_L0+7
0x01BD	0x01C3      	CLRF       main_trama_L0+8
0x01BE	0x01C4      	CLRF       main_trama_L0+9
0x01BF	0x01C5      	CLRF       main_trama_L0+10
0x01C0	0x01C6      	CLRF       main_trama_L0+11
0x01C1	0x01C7      	CLRF       main_trama_L0+12
0x01C2	0x01C8      	CLRF       main_trama_L0+13
0x01C3	0x01C9      	CLRF       main_trama_L0+14
0x01C4	0x01CA      	CLRF       main_trama_L0+15
0x01C5	0x01CB      	CLRF       main_trama_L0+16
0x01C6	0x01CC      	CLRF       main_trama_L0+17
0x01C7	0x01CD      	CLRF       main_trama_L0+18
0x01C8	0x01CE      	CLRF       main_trama_L0+19
0x01C9	0x01CF      	CLRF       main_trama_L0+20
;Escritor.c,11 :: 		unsigned char size = 0x00;
0x01CA	0x01D0      	CLRF       main_size_L0
0x01CB	0x01D1      	CLRF       main_j_L0
;Escritor.c,16 :: 		start();
0x01CC	0x2166      	CALL       _start
;Escritor.c,17 :: 		while (1) {
L_main12:
;Escritor.c,18 :: 		if(UART1_Data_Ready()){
0x01CD	0x200D      	CALL       _UART1_Data_Ready
0x01CE	0x0870      	MOVF       R0, 0
0x01CF	0x1903      	BTFSC      STATUS, 2
0x01D0	0x29FA      	GOTO       L_main14
;Escritor.c,19 :: 		byteRecv = readData();
0x01D1	0x206D      	CALL       _readData
;Escritor.c,20 :: 		if(byteRecv == ':'){
0x01D2	0x0870      	MOVF       R0, 0
0x01D3	0x3A3A      	XORLW      58
0x01D4	0x1D03      	BTFSS      STATUS, 2
0x01D5	0x29FA      	GOTO       L_main15
;Escritor.c,21 :: 		trama[0] = ascii2hex();
0x01D6	0x20B4      	CALL       _ascii2hex
0x01D7	0x0870      	MOVF       R0, 0
0x01D8	0x00BB      	MOVWF      main_trama_L0
;Escritor.c,22 :: 		size = trama[0] + 0x05;
0x01D9	0x3005      	MOVLW      5
0x01DA	0x0770      	ADDWF      R0, 0
0x01DB	0x00D0      	MOVWF      main_size_L0
;Escritor.c,23 :: 		for(j = 1; j<size; j++){
0x01DC	0x3001      	MOVLW      1
0x01DD	0x00D1      	MOVWF      main_j_L0
L_main16:
0x01DE	0x0850      	MOVF       main_size_L0, 0
0x01DF	0x0251      	SUBWF      main_j_L0, 0
0x01E0	0x1803      	BTFSC      STATUS, 0
0x01E1	0x29EC      	GOTO       L_main17
;Escritor.c,24 :: 		trama[j] = ascii2hex();
0x01E2	0x0851      	MOVF       main_j_L0, 0
0x01E3	0x3E3B      	ADDLW      main_trama_L0
0x01E4	0x00D2      	MOVWF      FLOC__main
0x01E5	0x20B4      	CALL       _ascii2hex
0x01E6	0x0852      	MOVF       FLOC__main, 0
0x01E7	0x0084      	MOVWF      FSR
0x01E8	0x0870      	MOVF       R0, 0
0x01E9	0x0080      	MOVWF      INDF
;Escritor.c,23 :: 		for(j = 1; j<size; j++){
0x01EA	0x0AD1      	INCF       main_j_L0, 1
;Escritor.c,25 :: 		}
0x01EB	0x29DE      	GOTO       L_main16
L_main17:
;Escritor.c,26 :: 		check = check_sum(trama);
0x01EC	0x303B      	MOVLW      main_trama_L0
0x01ED	0x00D3      	MOVWF      FARG_check_sum_trama
0x01EE	0x2088      	CALL       _check_sum
;Escritor.c,27 :: 		check ? write_intel(trama) : UART1_Write_Text("BAD\n");
0x01EF	0x0870      	MOVF       R0, 0
0x01F0	0x1903      	BTFSC      STATUS, 2
0x01F1	0x29F6      	GOTO       L_main19
0x01F2	0x303B      	MOVLW      main_trama_L0
0x01F3	0x00D3      	MOVWF      FARG_write_intel_trama
0x01F4	0x20D0      	CALL       _write_intel
0x01F5	0x29F9      	GOTO       L_main20
L_main19:
0x01F6	0x3020      	MOVLW      ?lstr1_Escritor
0x01F7	0x00D7      	MOVWF      FARG_UART1_Write_Text_uart_text
0x01F8	0x2026      	CALL       _UART1_Write_Text
L_main20:
;Escritor.c,28 :: 		PORTB = 0x00;
0x01F9	0x0186      	CLRF       PORTB
;Escritor.c,29 :: 		}
L_main15:
;Escritor.c,30 :: 		}
L_main14:
;Escritor.c,31 :: 		}
0x01FA	0x29CD      	GOTO       L_main12
;Escritor.c,32 :: 		}
L_end_main:
0x01FB	0x29FB      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [10]    _UART1_Write
0x000D       [7]    _UART1_Data_Ready
0x0014      [11]    _UART1_Read
0x001F       [7]    _____DoICP
0x0026      [22]    _UART1_Write_Text
0x003C      [33]    _write_eeprom
0x005D      [16]    _UART1_Init
0x006D      [13]    _readData
0x007A      [14]    _mult
0x0088      [44]    _check_sum
0x00B4      [28]    _ascii2hex
0x00D0     [138]    _write_intel
0x015A      [12]    ___CC2DW
0x0166      [32]    _start
0x0186     [118]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0002       [1]    PCL
0x0003       [1]    STATUS
0x0004       [1]    FSR
0x0006       [1]    PORTB
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000C       [1]    PIR1
0x0018       [1]    RCSTA
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x0020       [5]    ?lstr1_Escritor
0x0025       [4]    ?lstr2_Escritor
0x0029      [15]    ?lstr3_Escritor
0x0038       [2]    ___DoICPAddr
0x003A       [1]    ?FLOC___mainT51
0x003B      [21]    main_trama_L0
0x0050       [1]    main_size_L0
0x0051       [1]    main_j_L0
0x0052       [1]    FLOC__main
0x0053       [1]    ascii2hex_dato_L0
0x0053       [1]    FARG_check_sum_trama
0x0053       [1]    FARG_write_intel_trama
0x0054       [1]    check_sum_j_L0
0x0054       [2]    write_intel_dir_L0
0x0056       [1]    write_intel_i_L0
0x0057       [1]    FARG_write_eeprom_addrh
0x0057       [1]    FARG_UART1_Write_Text_uart_text
0x0057       [1]    FARG_mult_dato
0x0058       [1]    FARG_write_eeprom_addr
0x0058       [1]    UART1_Write_Text_data__L0
0x0059       [1]    FARG_write_eeprom_datoh
0x0059       [1]    UART1_Write_Text_counter_L0
0x005A       [1]    FARG_write_eeprom_dato
0x005B       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0086       [1]    TRISB
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC7_bit
0x0098       [1]    TXSTA
0x0099       [1]    SPBRG
0x009A       [1]    SPBRGH
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x0189       [1]    ANSELH
0x018C       [1]    EECON1
0x018D       [1]    EECON2
